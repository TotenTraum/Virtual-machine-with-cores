#include math

f tenf 10; 

;//////////////////////////////////////////////
; fn readFloat(int degree) -> Float
;
; return  r[0] - val, r[1] - degree
;//////////////////////////////////////////////
l readFloat:
	c push r[7]; сохраняем значение r7 в стеке
	c si r[7]; записываем индекс стека в r7
	c push r[2]; сохраняем значение r2 в стеке

	c top r[1], r[7:2];

	c push 1;
	c read r[2];

	c push mem[tenf];
	c push r[1];
	c call POW;
	
	c mulf r[0], r[2];
	c toi r[0];

	c muli r[1], -1;

	c pop r[2];
	c pop r[7];

	c rtn 1
;//////////////////////////////////////////////
; END_FUNCTION
;//////////////////////////////////////////////

;//////////////////////////////////////////////
; fn writeFloat(Float a) -> void
;
;//////////////////////////////////////////////
l writeFloat:
	c push r[7]; сохраняем значение r7 в стеке
	c si r[7]; записываем индекс стека в r7
	c push r[0]; сохраняем значение r0 в стеке
	c push r[1]; сохраняем значение r1 в стеке
	c push r[2]; сохраняем значение r2 в стеке

	c top r[1], r[7:3];
	c top r[2], r[7:2];

	;c push mem[tenf];
	c tof r[1];
	c push r[1];
	c push r[2];
	c call POW_10_n;

	;c divf r[1], r[0];

	c push 3;
	c write r[0];

	c pop r[2];
	c pop r[1];
	c pop r[0];
	c pop r[7];

	c rtn 2
;//////////////////////////////////////////////
; END_FUNCTION
;//////////////////////////////////////////////
